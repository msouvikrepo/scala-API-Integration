<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mailytica.ai</groupId>
  <artifactId>mailytica-api</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>


  <modules>
    <module>dhl-api</module>
  </modules>

  <profiles>
    <profile>
      <id>integration</id>
      <properties>
        <test-suffixes>**/*SpecIntegration.*</test-suffixes>
      </properties>
    </profile>
  </profiles>

  <dependencies>

    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>

    <dependency>
      <groupId>org.scalaz</groupId>
      <artifactId>scalaz-core_${scala.compat.version}</artifactId>
      <version>${scalaz.version}</version>
    </dependency>

    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-http-spray-json_${scala.compat.version}</artifactId>
      <version>${akka-http}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalactic</groupId>
      <artifactId>scalactic_${scala.compat.version}</artifactId>
      <version>${scala-test.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.compat.version}</artifactId>
      <version>${scala-test.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalamock</groupId>
      <artifactId>scalamock_${scala.compat.version}</artifactId>
      <version>${scala-mock-version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <sourceDirectory>dhl-api/src/main/scala</sourceDirectory>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
            <execution>
              <!-- This id must match the -Prelease-profile id value or else sources will be "uploaded" twice, which causes Nexus to fail -->
              <id>attach-sources</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>

      <!-- Maven Scala Plugin -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <arg>-dependencyfile</arg>
                <arg>${project.build.directory}/.scala_dependencies</arg>
                <arg>-target:jvm-1.8</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Maven Enforcer Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>default-cli</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>(,1.9)</version> <!-- everthing below 1.9, not 9 itself -->
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Maven Surefire Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <useFile>false</useFile>
          <disableXmlReport>true</disableXmlReport>
          <!-- If you have classpath issue like NoDefClassError,... -->
          <!-- useManifestOnlyJar>false</useManifestOnlyJar -->
          <includes>
            <include>${test-suffixes}</include>
          </includes>
          <!--
          <parallel>classes</parallel>
          <threadCount>3</threadCount>
          -->
        </configuration>
      </plugin>

      <!-- Maven Jar Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Maven Source Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>

    </plugins>

    <extensions>
      <extension>
        <groupId>com.google.cloud.artifactregistry</groupId>
        <artifactId>artifactregistry-maven-wagon</artifactId>
        <version>2.2.0</version>
      </extension>
    </extensions>

  </build>

  <properties>

    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <encoding>UTF-8</encoding>

    <test-suffixes>**/*Spec.*</test-suffixes>

    <!-- Scala -->
    <scala.version>2.11.12</scala.version>
    <scala.compat.version>2.11</scala.compat.version>

    <!-- Testing -->
    <junit.version>4.13.2</junit.version>
    <scala-test.version>3.0.8</scala-test.version> <!-- https://mvnrepository.com/artifact/org.scalatest/scalatest -->
    <scala-mock-version>4.4.0</scala-mock-version> <!-- https://mvnrepository.com/artifact/org.scalamock/scalamock -->
    <test-containers-version>1.17.3</test-containers-version> <!-- https://mvnrepository.com/artifact/org.testcontainers/selenium/1.15.1 -->
    <test-containers-scala-version>0.40.10</test-containers-scala-version> <!-- https://mvnrepository.com/artifact/com.dimafeng/testcontainers-scala_2.11/0.38.8 -->

    <!-- Akka -->
    <akka-version>2.5.32</akka-version> <!-- version of akka-streams too --> <!-- https://mvnrepository.com/artifact/com.typesafe.akka/akka-stream -->
    <akka-http>10.1.15</akka-http> <!-- https://mvnrepository.com/artifact/com.typesafe.akka/akka-http -->
    <spray-json-version>1.3.6</spray-json-version> <!-- align this version with akka-http-spray-json -->
    <reactive-streams-version>1.0.3</reactive-streams-version>

    <!-- Spark -->
    <spark-version>2.4.8</spark-version>
    <spark-nlp-version>2.7.5</spark-nlp-version>
    <hadoop-client-version>2.10.2</hadoop-client-version>

    <!-- Neo4j -->
    <neo4j-version>4.4.10</neo4j-version> <!-- just a reminder of the current used neo4j version, this dependency is used nowhere -->
    <neo4j-bolt-driver>4.0.5</neo4j-bolt-driver> <!-- https://mvnrepository.com/artifact/org.neo4j/neo4j-jdbc-bolt  -->

    <!-- Logging -->
    <slf4j-version>1.7.32</slf4j-version>

    <!-- Others -->
    <zero-turnaround-zip-utils>1.14</zero-turnaround-zip-utils>
    <hikari-cp-version>3.4.5</hikari-cp-version> <!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP -->
    <jsuereth-version>2.0</jsuereth-version> <!-- resource management -->
    <metrics.version>3.2.6</metrics.version> <!-- conflicts with spark -->
    <javax.mail.version>1.6.2</javax.mail.version>
    <scalaz.version>7.3.5</scalaz.version>
    <httpclient-version>4.5.2</httpclient-version> <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
    <guava.version>14.0.1</guava.version> <!-- old version for Spark -->
    <elastic.version>8.3.3</elastic.version>
    <prometheus.version>0.16.0</prometheus.version> <!-- https://mvnrepository.com/artifact/io.prometheus/simpleclient_dropwizard/0.14.0 -->

  </properties>

  <!--
  <distributionManagement>
      <snapshotRepository>
          <id>artifact-registry</id>
          <url>https://europe-west3-maven.pkg.dev/mailytica-dev/maven-mailytica</url>
      </snapshotRepository>
      <repository>
          <id>artifact-registry</id>
          <url>https://europe-west3-maven.pkg.dev/mailytica-dev/maven-mailytica</url>
      </repository>
  </distributionManagement>
  <repositories>
      <repository>
          <id>artifact-registry</id>
          <url>https://europe-west3-maven.pkg.dev/mailytica-dev/maven-mailytica</url>
          <releases>
              <enabled>true</enabled>
          </releases>
          <snapshots>
              <enabled>true</enabled>
          </snapshots>
      </repository>
  </repositories>
  -->

  <distributionManagement>
    <snapshotRepository>
      <id>artifact-registry</id>
      <url>https://europe-west3-maven.pkg.dev/mailytica-dev/maven-mailytica</url>
    </snapshotRepository>
    <repository>
      <id>artifact-registry</id>
      <url>https://europe-west3-maven.pkg.dev/mailytica-dev/maven-mailytica</url>
    </repository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>artifact-registry</id>
      <url>https://europe-west3-maven.pkg.dev/mailytica-dev/maven-mailytica</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
</project>